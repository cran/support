// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// csample_num
NumericVector csample_num(NumericVector x, int size, bool replace);
RcppExport SEXP _support_csample_num(SEXP xSEXP, SEXP sizeSEXP, SEXP replaceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< bool >::type replace(replaceSEXP);
    rcpp_result_gen = Rcpp::wrap(csample_num(x, size, replace));
    return rcpp_result_gen;
END_RCPP
}
// energycrit
NumericVector energycrit(NumericMatrix& Rcpp_point, NumericMatrix& Rcpp_des, NumericMatrix& cn, int num_proc);
RcppExport SEXP _support_energycrit(SEXP Rcpp_pointSEXP, SEXP Rcpp_desSEXP, SEXP cnSEXP, SEXP num_procSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type Rcpp_point(Rcpp_pointSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type Rcpp_des(Rcpp_desSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type cn(cnSEXP);
    Rcpp::traits::input_parameter< int >::type num_proc(num_procSEXP);
    rcpp_result_gen = Rcpp::wrap(energycrit(Rcpp_point, Rcpp_des, cn, num_proc));
    return rcpp_result_gen;
END_RCPP
}
// starL2cpp
NumericVector starL2cpp(NumericMatrix& D, NumericMatrix& cn, int num_proc);
RcppExport SEXP _support_starL2cpp(SEXP DSEXP, SEXP cnSEXP, SEXP num_procSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type D(DSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type cn(cnSEXP);
    Rcpp::traits::input_parameter< int >::type num_proc(num_procSEXP);
    rcpp_result_gen = Rcpp::wrap(starL2cpp(D, cn, num_proc));
    return rcpp_result_gen;
END_RCPP
}
// energy_norm_cpp
NumericVector energy_norm_cpp(NumericMatrix& yMat, NumericMatrix& cn, int num_proc);
RcppExport SEXP _support_energy_norm_cpp(SEXP yMatSEXP, SEXP cnSEXP, SEXP num_procSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type yMat(yMatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type cn(cnSEXP);
    Rcpp::traits::input_parameter< int >::type num_proc(num_procSEXP);
    rcpp_result_gen = Rcpp::wrap(energy_norm_cpp(yMat, cn, num_proc));
    return rcpp_result_gen;
END_RCPP
}
// obj_qsp
double obj_qsp(arma::vec& des, arma::mat& distsamp, double q);
RcppExport SEXP _support_obj_qsp(SEXP desSEXP, SEXP distsampSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type des(desSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type distsamp(distsampSEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(obj_qsp(des, distsamp, q));
    return rcpp_result_gen;
END_RCPP
}
// grad_qsp
arma::vec grad_qsp(arma::vec& des, arma::mat& distsamp, double q);
RcppExport SEXP _support_grad_qsp(SEXP desSEXP, SEXP distsampSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type des(desSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type distsamp(distsampSEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_qsp(des, distsamp, q));
    return rcpp_result_gen;
END_RCPP
}
// thincpp
NumericMatrix thincpp(NumericMatrix& Rcpp_point, arma::mat& Rcpp_inides, int num_subsamp, NumericMatrix& bound, int it_max, int inn_it_max, double innertol, double outertol, double epsilon, double rate, int num_proc);
RcppExport SEXP _support_thincpp(SEXP Rcpp_pointSEXP, SEXP Rcpp_inidesSEXP, SEXP num_subsampSEXP, SEXP boundSEXP, SEXP it_maxSEXP, SEXP inn_it_maxSEXP, SEXP innertolSEXP, SEXP outertolSEXP, SEXP epsilonSEXP, SEXP rateSEXP, SEXP num_procSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type Rcpp_point(Rcpp_pointSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type Rcpp_inides(Rcpp_inidesSEXP);
    Rcpp::traits::input_parameter< int >::type num_subsamp(num_subsampSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type bound(boundSEXP);
    Rcpp::traits::input_parameter< int >::type it_max(it_maxSEXP);
    Rcpp::traits::input_parameter< int >::type inn_it_max(inn_it_maxSEXP);
    Rcpp::traits::input_parameter< double >::type innertol(innertolSEXP);
    Rcpp::traits::input_parameter< double >::type outertol(outertolSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< double >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< int >::type num_proc(num_procSEXP);
    rcpp_result_gen = Rcpp::wrap(thincpp(Rcpp_point, Rcpp_inides, num_subsamp, bound, it_max, inn_it_max, innertol, outertol, epsilon, rate, num_proc));
    return rcpp_result_gen;
END_RCPP
}
// sp_cpp
NumericMatrix sp_cpp(int des_num, int dim_num, NumericMatrix& ini, NumericVector& distind, List distparam, NumericMatrix& distsamp, bool thin, NumericMatrix& bd, int point_num, int it_max, double tol, int num_proc);
RcppExport SEXP _support_sp_cpp(SEXP des_numSEXP, SEXP dim_numSEXP, SEXP iniSEXP, SEXP distindSEXP, SEXP distparamSEXP, SEXP distsampSEXP, SEXP thinSEXP, SEXP bdSEXP, SEXP point_numSEXP, SEXP it_maxSEXP, SEXP tolSEXP, SEXP num_procSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type des_num(des_numSEXP);
    Rcpp::traits::input_parameter< int >::type dim_num(dim_numSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type ini(iniSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type distind(distindSEXP);
    Rcpp::traits::input_parameter< List >::type distparam(distparamSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type distsamp(distsampSEXP);
    Rcpp::traits::input_parameter< bool >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type bd(bdSEXP);
    Rcpp::traits::input_parameter< int >::type point_num(point_numSEXP);
    Rcpp::traits::input_parameter< int >::type it_max(it_maxSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type num_proc(num_procSEXP);
    rcpp_result_gen = Rcpp::wrap(sp_cpp(des_num, dim_num, ini, distind, distparam, distsamp, thin, bd, point_num, it_max, tol, num_proc));
    return rcpp_result_gen;
END_RCPP
}
